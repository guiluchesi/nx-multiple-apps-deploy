name: Build and Test Affected Projects

on:
  push:
    branches:
      - main

jobs:
  define-affected-projects:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v3

      - name: Install dependencies
        run: npm install

      - name: Set the value
        id: step_one
        run: |
          echo "action_state=yellow" >> "$GITHUB_ENV"

      - name: Use the value
        id: step_two
        run: |
          echo "${{ env.action_state }}"

      - name: Set affected projects env
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          projects=$(npx nx print-affected --select=projects --plain)
          echo "PROJECTS=$(npx nx print-affected --select=projects --plain)" >> "$GITHUB_ENV"
          echo "PROJECTS_3=app-1" >> "$GITHUB_ENV"
          echo "project_4=$projects" >> "$GITHUB_ENV"
          echo "PROJECTS_2<<$EOF" >> "$GITHUB_ENV"
          echo "$(npx nx print-affected --select=projects --plain)" >> "$GITHUB_ENV"
          echo "$EOF" >> "$GITHUB_ENV"
          echo "Projects env: $PROJECTS"
          echo "Projects 2 env: $PROJECTS_2"
          echo "Projects 3 env: $PROJECTS_3"
          echo "Projects 4 env: $projects_4"

  double-check:
    needs: define-affected-projects
    runs-on: ubuntu-latest

    steps:
      - name: Testing variables
        run: |
          echo "needs: ${{needs.define-affected-projects.outputs.PROJECTS}}"
          echo "pure var: $PROJECTS"
          echo "env: ${{env.PROJECTS}}"

  ui:
    needs: define-affected-projects
    if: contains(needs.define-affected-projects.outputs.PROJECTS, 'ui')
    runs-on: ubuntu-latest

    steps:
      - name: Run UI job
        run: echo "Running UI job"

  app-1:
    needs: define-affected-projects
    if: contains(needs.define-affected-projects.outputs.PROJECTS, 'app-1')
    runs-on: ubuntu-latest

    steps:
      - name: Run API job
        run: echo "Running API job"
